{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/darren1208/Documents/GitHub/timeflex/src/App.js\";\nimport React from 'react';\nimport { Navbar, Nav, NavDropdown, Button } from 'react-bootstrap';\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { INITIAL_EVENTS, createEventId } from './event-utils';\n\nconst App = () => {\n  state = {\n    weekendsVisible: true,\n    currentEvents: []\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"light\",\n        expand: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          style: {\n            margin: \"0 30px 0 10px\"\n          },\n          children: \"TimeFlex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"basic-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"basic-navbar-nav\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"ml-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-secondary\",\n              style: {\n                margin: \"0 10px 0 10px\"\n              },\n              children: \"Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n              title: \"Dropdown\",\n              id: \"basic-nav-dropdown\",\n              style: {\n                margin: \"0 10px 0 10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#action/3.1\",\n                children: \"Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#action/3.2\",\n                children: \"Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#action/3.3\",\n                children: \"Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#action/3.3\",\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-app-main\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          },\n          initialView: \"dayGridMonth\",\n          editable: true,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true,\n          weekends: this.state.weekendsVisible,\n          fixedWeekCount: false,\n          height: \"100%\",\n          initialEvents: INITIAL_EVENTS // alternatively, use the `events` setting to fetch from a feed\n          ,\n          select: this.handleDateSelect,\n          eventContent: renderEventContent // custom render function\n          ,\n          eventClick: this.handleEventClick,\n          eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n\n          /* you can update a remote database when these fire:\n          eventAdd={function(){}}\n          eventChange={function(){}}\n          eventRemove={function(){}}\n          */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\n\nhandleWeekendsToggle = () => {\n  this.setState({\n    weekendsVisible: !this.state.weekendsVisible\n  });\n};\n\nhandleDateSelect = selectInfo => {\n  let title = prompt('Please enter a new title for your event');\n  let calendarApi = selectInfo.view.calendar;\n  calendarApi.unselect(); // clear date selection\n\n  if (title) {\n    calendarApi.addEvent({\n      id: createEventId(),\n      title,\n      start: selectInfo.startStr,\n      end: selectInfo.endStr,\n      allDay: selectInfo.allDay\n    });\n  }\n};\n\nhandleEventClick = clickInfo => {\n  if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n    clickInfo.event.remove();\n  }\n};\n\nhandleEvents = events => {\n  this.setState({\n    currentEvents: events\n  });\n};\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: eventInfo.timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/darren1208/Documents/GitHub/timeflex/src/App.js"],"names":["React","Navbar","Nav","NavDropdown","Button","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","INITIAL_EVENTS","createEventId","App","state","weekendsVisible","currentEvents","margin","left","center","right","handleDateSelect","renderEventContent","handleEventClick","handleEvents","handleWeekendsToggle","setState","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","clickInfo","confirm","event","remove","events","eventInfo","timeText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Navbar, Nav, NavDropdown, Button } from 'react-bootstrap';\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { INITIAL_EVENTS, createEventId } from './event-utils'\n\n\nconst App = () => {\n\n    state = {\n        weekendsVisible: true,\n        currentEvents: []\n    }\n\n    return (\n        <div>\n            <header>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\" style={{ margin: \"0 30px 0 10px\" }}>TimeFlex</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <Button variant=\"outline-secondary\" style={{ margin: \"0 10px 0 10px\" }}>Today</Button>\n                            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\" style={{ margin: \"0 10px 0 10px\" }}>\n                                <NavDropdown.Item href=\"#action/3.1\">Day</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.2\">Week</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.3\">Month</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.3\">Year</NavDropdown.Item>\n                            </NavDropdown>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </header>\n            <body>\n                <div className='demo-app-main'>\n                    <FullCalendar\n                        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                        headerToolbar={{\n                            left: 'prev,next today',\n                            center: 'title',\n                            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                        }}\n                        initialView='dayGridMonth'\n                        editable={true}\n                        selectable={true}\n                        selectMirror={true}\n                        dayMaxEvents={true}\n                        weekends={this.state.weekendsVisible}\n                        fixedWeekCount={false}\n                        height={\"100%\"}\n                        initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n                        select={this.handleDateSelect}\n                        eventContent={renderEventContent} // custom render function\n                        eventClick={this.handleEventClick}\n                        eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n                    /* you can update a remote database when these fire:\n                    eventAdd={function(){}}\n                    eventChange={function(){}}\n                    eventRemove={function(){}}\n                    */\n                    />\n                </div>\n            </body>\n        </div >\n\n    );\n}\n\nhandleWeekendsToggle = () => {\n    this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n    })\n}\n\nhandleDateSelect = (selectInfo) => {\n    let title = prompt('Please enter a new title for your event')\n    let calendarApi = selectInfo.view.calendar\n\n    calendarApi.unselect() // clear date selection\n\n    if (title) {\n        calendarApi.addEvent({\n            id: createEventId(),\n            title,\n            start: selectInfo.startStr,\n            end: selectInfo.endStr,\n            allDay: selectInfo.allDay\n        })\n    }\n}\n\nhandleEventClick = (clickInfo) => {\n    if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n        clickInfo.event.remove()\n    }\n}\n\nhandleEvents = (events) => {\n    this.setState({\n        currentEvents: events\n    })\n}\n\n\nfunction renderEventContent(eventInfo) {\n    return (\n        <>\n            <b>{eventInfo.timeText}</b>\n            <i>{eventInfo.event.title}</i>\n        </>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}