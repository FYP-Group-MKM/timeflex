{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/darren1208/Documents/GitHub/timeflex/src/App.js\";\nimport React from 'react';\nimport { Navbar, Nav, NavDropdown, Button } from 'react-bootstrap';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { INITIAL_EVENTS, createEventId } from './event-utils';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekendsVisible: true,\n      currentEvents: []\n    };\n\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n\n    this.handleDateSelect = selectInfo => {\n      let title = prompt('Please enter a new title for your event');\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(Navbar, {\n          bg: \"light\",\n          expand: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            href: \"#home\",\n            style: {\n              margin: \"0 30px 0 10px\"\n            },\n            children: \"TimeFlex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n            \"aria-controls\": \"basic-navbar-nav\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            id: \"basic-navbar-nav\",\n            children: /*#__PURE__*/_jsxDEV(Nav, {\n              className: \"ml-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                style: {\n                  margin: \"0 10px 0 10px\"\n                },\n                children: \"Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n                title: \"Dropdown\",\n                id: \"basic-nav-dropdown\",\n                style: {\n                  margin: \"0 10px 0 10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"#action/3.1\",\n                  children: \"Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"#action/3.2\",\n                  children: \"Week\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"#action/3.3\",\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                  href: \"#action/3.3\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"demo-app-main\",\n          children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n            headerToolbar: {\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay'\n            },\n            initialView: \"dayGridMonth\",\n            editable: true,\n            selectable: true,\n            selectMirror: true,\n            dayMaxEvents: true,\n            weekends: this.state.weekendsVisible,\n            fixedWeekCount: false,\n            height: \"100%\",\n            initialEvents: INITIAL_EVENTS // alternatively, use the `events` setting to fetch from a feed\n            ,\n            select: this.handleDateSelect,\n            eventContent: renderEventContent // custom render function\n            ,\n            eventClick: this.handleEventClick,\n            eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n\n            /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: eventInfo.timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/darren1208/Documents/GitHub/timeflex/src/App.js"],"names":["React","Navbar","Nav","NavDropdown","Button","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","INITIAL_EVENTS","createEventId","App","Component","state","weekendsVisible","currentEvents","handleWeekendsToggle","setState","handleDateSelect","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","handleEvents","events","render","margin","left","center","right","renderEventContent","handleEventClick","eventInfo","timeText","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Navbar, Nav, NavDropdown, Button } from 'react-bootstrap';\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { INITIAL_EVENTS, createEventId } from './event-utils'\n\n\nclass App extends React.Component {\n\n    state = {\n        weekendsVisible: true,\n        currentEvents: []\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <Navbar bg=\"light\" expand=\"lg\">\n                        <Navbar.Brand href=\"#home\" style={{ margin: \"0 30px 0 10px\" }}>TimeFlex</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"ml-auto\">\n                                <Button variant=\"outline-secondary\" style={{ margin: \"0 10px 0 10px\" }}>Today</Button>\n                                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\" style={{ margin: \"0 10px 0 10px\" }}>\n                                    <NavDropdown.Item href=\"#action/3.1\">Day</NavDropdown.Item>\n                                    <NavDropdown.Item href=\"#action/3.2\">Week</NavDropdown.Item>\n                                    <NavDropdown.Item href=\"#action/3.3\">Month</NavDropdown.Item>\n                                    <NavDropdown.Item href=\"#action/3.3\">Year</NavDropdown.Item>\n                                </NavDropdown>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </header>\n                <body>\n                    {/* <div className='demo-app-main'> */}\n                    <div className='demo-app-main'>\n                        <FullCalendar\n                            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                            headerToolbar={{\n                                left: 'prev,next today',\n                                center: 'title',\n                                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                            }}\n                            initialView='dayGridMonth'\n                            editable={true}\n                            selectable={true}\n                            selectMirror={true}\n                            dayMaxEvents={true}\n                            weekends={this.state.weekendsVisible}\n                            fixedWeekCount={false}\n                            height={\"100%\"}\n                            initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n                            select={this.handleDateSelect}\n                            eventContent={renderEventContent} // custom render function\n                            eventClick={this.handleEventClick}\n                            eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n                        /* you can update a remote database when these fire:\n                        eventAdd={function(){}}\n                        eventChange={function(){}}\n                        eventRemove={function(){}}\n                        */\n                        />\n                    </div>\n                </body>\n            </div >\n\n        );\n    }\n\n    handleWeekendsToggle = () => {\n        this.setState({\n            weekendsVisible: !this.state.weekendsVisible\n        })\n    }\n\n    handleDateSelect = (selectInfo) => {\n        let title = prompt('Please enter a new title for your event')\n        let calendarApi = selectInfo.view.calendar\n\n        calendarApi.unselect() // clear date selection\n\n        if (title) {\n            calendarApi.addEvent({\n                id: createEventId(),\n                title,\n                start: selectInfo.startStr,\n                end: selectInfo.endStr,\n                allDay: selectInfo.allDay\n            })\n        }\n    }\n\n    // handleEventClick = (clickInfo) => {\n    //     if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n    //         clickInfo.event.remove()\n    //     }\n    // }\n\n    handleEvents = (events) => {\n        this.setState({\n            currentEvents: events\n        })\n    }\n\n}\n\nfunction renderEventContent(eventInfo) {\n    return (\n        <>\n            <b>{eventInfo.timeText}</b>\n            <i>{eventInfo.event.title}</i>\n        </>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}