[{"/Users/darren1208/Documents/GitHub/timeflex/src/index.js":"1","/Users/darren1208/Documents/GitHub/timeflex/src/App.js":"2","/Users/darren1208/Documents/GitHub/timeflex/src/data/today-appointments.js":"3","/Users/darren1208/Documents/GitHub/timeflex/src/data/appointments.js":"4","/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/Calendar.js":"5","/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/DayScaleCell.js":"6","/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/TimeTableCell.js":"7","/Users/darren1208/Documents/GitHub/timeflex/src/components/theme.js":"8","/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/Dropdown.js":"9","/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/DateNavigator.js":"10","/Users/darren1208/Documents/GitHub/timeflex/src/components/Picker.js":"11","/Users/darren1208/Documents/GitHub/timeflex/src/components/CreateEventForm/CreateEventForm.js":"12","/Users/darren1208/Documents/GitHub/timeflex/src/components/CreateEventForm/FormPicker.js":"13"},{"size":420,"mtime":1609584257574,"results":"14","hashOfConfig":"15"},{"size":4943,"mtime":1609850740866,"results":"16","hashOfConfig":"15"},{"size":876,"mtime":1609398586036,"results":"17","hashOfConfig":"15"},{"size":7749,"mtime":1609920411201,"results":"18","hashOfConfig":"15"},{"size":4425,"mtime":1609910450079,"results":"19","hashOfConfig":"15"},{"size":1051,"mtime":1609869276734,"results":"20","hashOfConfig":"15"},{"size":1174,"mtime":1609869285370,"results":"21","hashOfConfig":"15"},{"size":445,"mtime":1609703564859,"results":"22","hashOfConfig":"15"},{"size":1941,"mtime":1609869034166,"results":"23","hashOfConfig":"15"},{"size":2321,"mtime":1609874724396,"results":"24","hashOfConfig":"15"},{"size":2348,"mtime":1609829487410,"results":"25","hashOfConfig":"15"},{"size":8803,"mtime":1609931666526,"results":"26","hashOfConfig":"15"},{"size":3140,"mtime":1609877049233,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"mcw4jl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/darren1208/Documents/GitHub/timeflex/src/index.js",[],["57","58"],"/Users/darren1208/Documents/GitHub/timeflex/src/App.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/data/today-appointments.js",[],["59","60"],"/Users/darren1208/Documents/GitHub/timeflex/src/data/appointments.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/Calendar.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/DayScaleCell.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/TimeTableCell.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/theme.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/Dropdown.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/DateNavigator.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/Picker.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/CreateEventForm/CreateEventForm.js",["61","62","63"],"import React, { Component } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport FormPicker from './FormPicker';\nimport { appointments } from '../../data/appointments';\n\nconst styles = {\n    fab: {\n        position: \"absolute\",\n        bottom: 25,\n        right: 25,\n        zIndex: 1,\n    },\n};\n\nclass CreateEventForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: true,\n            allDay: false,\n            title: \"\",\n            startDate: new Date(),\n            endDate: new Date(),\n            description: null,\n        };\n    }\n\n    handleOpen = () => {\n        this.setState({ isOpen: true });\n    }\n\n    handleClose = () => {\n        this.setState({ isOpen: false });\n    }\n\n    handleSubmit = () => {\n        let appointment = {\n            title: this.state.title,\n            startDate: this.state.startDate,\n            endDate: this.state.endDate,\n        };\n        this.handleClose();\n    }\n\n    setAllDay = () => {\n        this.setState({ allDay: this.state.allDay ? false : true })\n    }\n\n    handleTextFieldInput = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({ [nam]: val });\n    }\n\n    handleStartDateInput = (startDate) => {\n        this.setState({ startDate });\n    }\n\n    handleEndDateInput = (endDate) => {\n        this.setState({ endDate });\n    }\n\n\n\n    render() {\n        const { classes } = this.props;\n        console.log(this.state)\n        return (\n            <div>\n                <Dialog\n                    aria-labelledby=\"form-dialog-title\"\n                    open={this.state.isOpen}\n                    onClose={this.handleClose}\n                    fullWidth maxWidth=\"xs\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create Event</DialogTitle>\n                    <DialogContent style={{ minHeight: \"300px\" }}>\n                        <Grid container direction=\"column\" spacing={2} justify=\"space-evenly\">\n                            <Grid item>\n                                <TextField\n                                    autoFocus\n                                    required\n                                    name=\"title\"\n                                    label=\"Title\"\n                                    onChange={this.handleTextFieldInput}\n                                    fullWidth\n                                />\n                            </Grid>\n                            <Grid item key={this.state.allDay}>\n                                {\n                                    this.state.allDay\n                                        ? <div>\n                                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"flex-start\" spacing={2}>\n                                                <Grid item style={{ minWidth: \"55px\" }}>\n                                                    <Typography variant=\"body2\" style={{ color: \"#616161\" }}>From</Typography>\n                                                </Grid>\n                                                <Grid item>\n                                                    <FormPicker currentDate={new Date()} handleFormChange={this.handleStartDateInput} allDay />\n                                                </Grid>\n                                            </Grid>\n                                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"flex-start\" spacing={2}>\n                                                <Grid item style={{ minWidth: \"55px\" }}>\n                                                    <Typography variant=\"body2\" style={{ color: \"#616161\" }}>Until</Typography>\n                                                </Grid>\n                                                <Grid item>\n                                                    <FormPicker currentDate={new Date()} handleFormChange={this.handleEndDateInput} allDay />\n                                                </Grid>\n                                            </Grid>\n                                        </div>\n                                        : <div>\n                                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"flex-start\" spacing={2}>\n                                                <Grid item style={{ minWidth: \"55px\" }}>\n                                                    <Typography variant=\"body2\" style={{ color: \"#616161\" }}>From</Typography>\n                                                </Grid>\n                                                <Grid item>\n                                                    <FormPicker currentDate={new Date()} handleFormChange={this.handleStartDateInput} />\n                                                </Grid>\n                                            </Grid>\n                                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"flex-start\" spacing={2}>\n                                                <Grid item style={{ minWidth: \"55px\" }}>\n                                                    <Typography variant=\"body2\" style={{ color: \"#616161\" }}>Until</Typography>\n                                                </Grid>\n                                                <Grid item>\n                                                    <FormPicker currentDate={new Date()} handleFormChange={this.handleEndDateInput} />\n                                                </Grid>\n                                            </Grid>\n                                        </div>\n                                }\n                            </Grid>\n                            <Grid container=\"row\" justify=\"flex-start\" style={{ margin: \"10px 0\" }}>\n                                <Grid item style={{ marginLeft: \"10px\" }}>\n                                    <FormControlLabel\n                                        value=\"start\"\n                                        control={<Switch color=\"primary\" size=\"small\" onChange={this.setAllDay} />}\n                                        label=\"All day\"\n                                    />\n                                </Grid>\n                                <Grid item style={{ marginLeft: \"10px\" }}>\n                                    <FormControlLabel\n                                        value=\"start\"\n                                        control={<Switch color=\"primary\" size=\"small\" />}\n                                        label=\"Repeat\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    name=\"description\"\n                                    label=\"Description\"\n                                    variant=\"outlined\"\n                                    defaultValue=\" \"\n                                    onChange={this.handleFormChange}\n                                    multiline rows=\"2\"\n                                    fullWidth\n                                />\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSubmit} color=\"primary\" disableElevation>\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Tooltip title=\"Create Event\" placement=\"left\" aria-label=\"add\">\n                    <Fab color=\"primary\" aria-label=\"add\" style={styles.fab} onClick={this.handleOpen}>\n                        <AddIcon />\n                    </Fab>\n                </Tooltip>\n            </div >\n        )\n    }\n}\n\nexport default CreateEventForm;","/Users/darren1208/Documents/GitHub/timeflex/src/components/CreateEventForm/FormPicker.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":16,"column":10,"nodeType":"72","messageId":"73","endLine":16,"endColumn":22},{"ruleId":"70","severity":1,"message":"74","line":50,"column":13,"nodeType":"72","messageId":"73","endLine":50,"endColumn":24},{"ruleId":"70","severity":1,"message":"75","line":79,"column":17,"nodeType":"72","messageId":"73","endLine":79,"endColumn":24},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],"no-unused-vars","'appointments' is defined but never used.","Identifier","unusedVar","'appointment' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]