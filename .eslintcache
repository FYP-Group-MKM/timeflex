[{"/Users/darren1208/Documents/GitHub/timeflex/src/index.js":"1","/Users/darren1208/Documents/GitHub/timeflex/src/App.js":"2","/Users/darren1208/Documents/GitHub/timeflex/src/data/today-appointments.js":"3","/Users/darren1208/Documents/GitHub/timeflex/src/data/appointments.js":"4","/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/Calendar.js":"5","/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/DayScaleCell.js":"6","/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/TimeTableCell.js":"7","/Users/darren1208/Documents/GitHub/timeflex/src/components/theme.js":"8","/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/Dropdown.js":"9","/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/DateNavigator.js":"10","/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/Picker.js":"11","/Users/darren1208/Documents/GitHub/timeflex/src/components/CreateEventForm.js":"12"},{"size":420,"mtime":1609584257574,"results":"13","hashOfConfig":"14"},{"size":4636,"mtime":1609770308842,"results":"15","hashOfConfig":"14"},{"size":876,"mtime":1609398586036,"results":"16","hashOfConfig":"14"},{"size":207,"mtime":1609605486822,"results":"17","hashOfConfig":"14"},{"size":4414,"mtime":1609755612504,"results":"18","hashOfConfig":"14"},{"size":1062,"mtime":1609588536125,"results":"19","hashOfConfig":"14"},{"size":1185,"mtime":1609701853621,"results":"20","hashOfConfig":"14"},{"size":445,"mtime":1609703564859,"results":"21","hashOfConfig":"14"},{"size":1951,"mtime":1609769334849,"results":"22","hashOfConfig":"14"},{"size":2441,"mtime":1609769283611,"results":"23","hashOfConfig":"14"},{"size":2358,"mtime":1609767850648,"results":"24","hashOfConfig":"14"},{"size":2299,"mtime":1609768670786,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"mcw4jl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/Users/darren1208/Documents/GitHub/timeflex/src/index.js",[],["56","57"],"/Users/darren1208/Documents/GitHub/timeflex/src/App.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/data/today-appointments.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/data/appointments.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/Calendar.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/DayScaleCell.js",["58"],"import { makeStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { Scheduler, WeekView } from '@devexpress/dx-react-scheduler-material-ui';\n\nconst useStyles = makeStyles(theme => ({\n    todayCell: {\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.primary.main, 0.14),\n        },\n        '&:focus': {\n            backgroundColor: fade(theme.palette.primary.main, 0.16),\n        },\n    },\n    today: {\n        backgroundColor: fade(theme.palette.primary.main, 0.16),\n    },\n}));\n\n\nconst DayScaleCell = (props) => {\n    const classes = useStyles();\n    const { startDate, today } = props;\n\n    if (today) {\n        return <WeekView.DayScaleCell {...props} className={classes.today} />;\n    } if (startDate.getDay() === 0 || startDate.getDay() === 6) {\n        return <WeekView.DayScaleCell {...props} className={classes.weekend} />;\n    } return <WeekView.DayScaleCell {...props} />;\n};\n\nexport default DayScaleCell;\n","/Users/darren1208/Documents/GitHub/timeflex/src/components/Calendar/TimeTableCell.js",["59"],"import { makeStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { Scheduler, WeekView } from '@devexpress/dx-react-scheduler-material-ui';\n\nconst useStyles = makeStyles(theme => ({\n    weekendCell: {\n        backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\n        },\n        '&:focus': {\n            backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\n        },\n    },\n    weekend: {\n        backgroundColor: fade(theme.palette.action.disabledBackground, 0.06),\n    },\n}));\n\nconst TimeTableCell = (props) => {\n    const classes = useStyles();\n    const { startDate } = props;\n    const date = new Date(startDate);\n\n    if (date.getDate() === new Date().getDate()) {\n        return <WeekView.TimeTableCell {...props} className={classes.todayCell} />;\n    } if (date.getDay() === 0 || date.getDay() === 6) {\n        return <WeekView.TimeTableCell {...props} className={classes.weekendCell} />;\n    } return <WeekView.TimeTableCell {...props} />;\n};\n\nexport default TimeTableCell;","/Users/darren1208/Documents/GitHub/timeflex/src/components/theme.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/Dropdown.js",["60"],"import React, { Component, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nexport default class Dropdown extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            currentViewName: this.props.currentViewName,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleClick = (event) => {\n        this.setState({\n            anchorEl: event.currentTarget,\n        });\n    };\n\n    handleClose = (event) => {\n        this.setState({\n            anchorEl: null,\n        });\n        if (event.currentTarget.title) {\n            this.props.currentViewNameChange(event.currentTarget.title);\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <Button\n                    aria-controls=\"simple-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={this.handleClick}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    endIcon={<ArrowDropDownIcon />}\n                >\n                    {this.state.currentViewName}\n                </Button >\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={this.state.anchorEl}\n                    keepMounted\n                    open={Boolean(this.state.anchorEl)}\n                    onClose={this.handleClose}\n                >\n                    <MenuItem title=\"Day\" onClick={this.handleClose}>Day</MenuItem>\n                    <MenuItem title=\"Week\" onClick={this.handleClose}>Week</MenuItem>\n                    <MenuItem title=\"Month\" onClick={this.handleClose}>Month</MenuItem>\n                </Menu>\n            </div>\n        )\n    }\n}\n","/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/DateNavigator.js",["61"],"import format from 'date-fns/format';\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Picker from './Picker';\n\nexport default class DateNavigator extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentDate: this.props.currentDate,\n            currentViewName: this.props.currentViewName,\n            pickerIsOpen: false,\n        };\n    }\n\n    setPicker = (pickerIsOpen) => {\n        this.setState({ pickerIsOpen });\n    }\n\n    handlerPickerDate = (date) => {\n        this.props.currentDateChange(date);\n    }\n\n    handleNavNx = () => {\n        let date = new Date(this.state.currentDate);\n        if (this.state.currentViewName === \"Day\") {\n            date.setDate(date.getDate() + 1);\n        }\n        if (this.state.currentViewName === \"Week\") {\n            date.setDate(date.getDate() + 7);\n        }\n        if (this.state.currentViewName === \"Month\") {\n            date.setDate(date.getMonth() + 1);\n        }\n        this.props.currentDateChange(date);\n    }\n\n    handleNavPrvs = () => {\n        let date = new Date(this.state.currentDate);\n        if (this.state.currentViewName === \"Day\") {\n            date.setDate(date.getDate() - 1);\n        }\n        if (this.state.currentViewName === \"Week\") {\n            date.setDate(date.getDate() - 7);\n        }\n        if (this.state.currentViewName === \"Month\") {\n            date.setDate(date.getMonth() - 1);\n        }\n        this.props.currentDateChange(date);\n    }\n\n    render() {\n        return (\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <IconButton onClick={this.handleNavPrvs}>\n                    <KeyboardArrowLeftIcon />\n                </IconButton>\n                <Picker\n                    key={this.state.currentDate + this.currentViewName}\n                    currentDate={this.state.currentDate}\n                    currentViewName={this.state.currentViewName}\n                    handleSelectedDate={this.props.currentDateChange}\n                />\n                <IconButton onClick={this.handleNavNx}>\n                    <KeyboardArrowRightIcon />\n                </IconButton>\n            </Grid>\n        )\n    }\n}\n","/Users/darren1208/Documents/GitHub/timeflex/src/components/AppBar/Picker.js",[],"/Users/darren1208/Documents/GitHub/timeflex/src/components/CreateEventForm.js",["62"],"import React, { Component } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = {\n    fab: {\n        position: \"absolute\",\n        bottom: 25,\n        right: 25,\n        zIndex: 1,\n    },\n};\n\nexport default class CreateEventForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n        };\n    }\n\n    handleOpen = () => {\n        this.setState({ isOpen: true });\n    }\n\n    handleClose = () => {\n        this.setState({ isOpen: false });\n    }\n\n    render() {\n        return (\n            <div>\n                <Dialog open={this.state.isOpen} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Create Event</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            id=\"name\"\n                            label=\"Add title\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleClose} color=\"primary\" disableElevation>\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Tooltip title=\"Create Event\" placement=\"left\" aria-label=\"add\">\n                    <Fab color=\"primary\" aria-label=\"add\" style={styles.fab} onClick={this.handleOpen}>\n                        <AddIcon />\n                    </Fab>\n                </Tooltip>\n            </div>\n        )\n    }\n}\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":19},{"ruleId":"67","severity":1,"message":"71","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"72","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":10,"column":8,"nodeType":"69","messageId":"70","endLine":10,"endColumn":25},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Scheduler' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'format' is defined but never used.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation"]